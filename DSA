
/*

Question 1: Merge k Sorted Lists 
You are given an array of k linkedlist heads, each list being sorted in ascending order. Write a function to merge all the lists into one sorted linked list and return its head. 

Example: 

Input: lists = [[1->4->5],[1->3->4],[2->6]] 

Output: 1->1->2->3->4->4->5->6 

Explanation: The merged linked list in ascending order. 


 */

class Node{
    int val;
    Node next;
    Node(int x){
        val=x;
    }
}

public class new {

    public static void main(String args[]){

        LinkedList <Integr> l1 = new LinkedList<>();
        LinkedList <Integr> l2 = new LinkedList<>();
        LinkedList <Integr> l3 = new LinkedList<>();


        List<LinkedList<Integr>> arr = new ArrayList<>();
        
        PriorityQueue<Node> pq = new PriorityQueue<>(
            (a,b)->a.val-b.val
        );

        for(LinkedList node: arr){
            if(node!=null){
                pq.offer(node);
            }
        }

        Node d = new Node(-1);
        Node curr =d;
        while(!pq.isEmpty()){
            Node small = pq.poll()
            curr.next=small;
            curr=curr.next;
            if(small.next!=null){
                pq.offer(small.next);
            }
        }
        return d.next;

    }
    
}
